{"version":3,"sources":["utils/validate.ts","redux/action-types.ts","utils/request.ts","api/admin.ts","utils/auth.ts","redux/action.ts","views/Login/index.tsx","config/menuList.ts","components/LeftNav/index.tsx","utils/time.ts","components/Header/index.tsx","views/Home/Line.tsx","views/Home/Bar.tsx","views/Home/index.tsx","views/Category/AddForm.tsx","views/Category/UpdateForm.tsx","api/category.ts","views/Category/index.tsx","api/product.ts","config/common.ts","views/Product/ProductList.tsx","components/PicturesWall/index.tsx","components/RichTextEditor/index.tsx","views/Product/ProductEdit.tsx","views/Product/ProductDetail.tsx","views/Product/index.tsx","views/User/UserForm.tsx","api/user.ts","views/User/index.tsx","views/Role/AddForm.tsx","views/Role/AuthForm.tsx","api/role.ts","views/Role/index.tsx","views/Charts/Bar.tsx","views/Charts/Line.tsx","views/Charts/Pie.tsx","views/NotFound/index.tsx","views/Admin/index.tsx","App.tsx","redux/reducers.ts","redux/store.ts","index.tsx","assets/images/logo.png"],"names":["validatePwd","rule","value","callback","trim","length","validatePrice","SET_HEAD_TITLE","GET_USER_INFO","REMOVE_USER","service","axios","create","baseURL","timeout","interceptors","request","use","config","err","message","error","Promise","response","data","status","msg","reqLogin","form","url","method","reqWeather","city","resolve","reject","jsonp","results","weather_data","dayPictureUrl","weather","reqDeleteImgs","name","auth_key","setUser","user","store","set","getUserInfo","type","logout","remove","initState","loading","Login","state","handleSubmit","e","preventDefault","props","validateFields","values","setState","username","password","login","this","_id","to","getFieldDecorator","className","src","logo","alt","onSubmit","Item","validateFirst","initialValue","rules","required","whitespace","min","max","pattern","prefix","style","color","placeholder","autoComplete","validator","htmlType","Component","WrapLogin","mapDispatchToProps","cb","dispatch","a","res","connect","menuList","title","key","icon","isPublic","children","SubMenu","LeftNav","openKey","menuNodes","filterMenus","item","menus","role","includes","find","child","getMenuList","filter","map","pathname","location","cItem","indexOf","setHeadTitle","onClick","getMenuList_reduce","reduce","pre","push","mode","theme","selectedKeys","defaultOpenKeys","headTitle","withRouter","parseNumber","num","formatDate","time","date","Date","Y","getFullYear","M","getMonth","D","getDate","h","getHours","m","getMinutes","s","getSeconds","currentTime","now","weatherPicUrl","Header","timer","getTime","setInterval","getWeather","handleLogout","confirm","content","okText","cancelText","maskClosable","onOk","clearInterval","Line","dv","DataSet","createView","source","month","b","c","transform","fields","float","width","height","scale","range","forceFit","label","formatter","val","crosshairs","position","size","shape","stroke","lineWidth","React","Bar","marginLeft","year","sales","tickInterval","RangePicker","isVisited","Home","handleChange","extra","headStyle","suffix","fontWeight","valueStyle","fontSize","defaultValue","moment","format","bodyStyle","padding","Option","AddForm","forwardRef","ref","categoryList","parentId","useImperativeHandle","WrapAddForm","UpdateForm","categoryName","WrapUpdateForm","reqGetCategoryList","params","reqGetCategory","categoryId","reqAddCategory","reqUpdateCategory","subCategoryList","parentName","showStatus","confirmLoading","Category","updateForm","addForm","columns","dataIndex","align","render","category","handleShowModal","handleShowSubCategory","updateCategory","getCategoryList","handleShowCategory","handleCancelModal","current","resetFields","handleSubmitAdd","handleSubmitUpdate","createRef","marginRight","rowKey","bordered","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","wrappedComponentRef","reqGetProductList","pageNum","pageSize","reqSearchProduct","searchName","searchType","reqAddProduct","reqUpdateProduct","PAGE_SIZE","BASE_IMG_URL","total","currentPage","productList","ProductList","price","newStatus","handleUpdateProductState","product","history","getProductList","list","handleSearchProduct","then","productId","onChange","margin","target","onPressEnter","getBase64","file","reader","FileReader","readAsDataURL","onload","result","onerror","previewVisible","previewImage","fileList","PicturesWall","getImgs","handleCancel","handlePreview","preview","originFileObj","realFile","success","imgs","img","index","uid","uploadButton","action","accept","listType","onPreview","footer","editorState","EditorState","createEmpty","RichTextEditor","onEditorStateChange","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","cascaderOptions","ProductEdit","isEdit","picturesWall","richTextEditor","handleLoadSubCategoryList","selectedOptions","targetOption","subCascaderOptions","isLeaf","categroyList","pCategoryId","option","desc","categoryIds","goBack","replace","labelCol","span","wrapperCol","autoSize","minRows","maxRows","addonAfter","options","loadData","offset","block","wrapProuctEdit","subCategoryName","ProductDetail","getCategoryName","all","res1","res2","display","alignItems","dangerouslySetInnerHTML","__html","Product","path","exact","component","UserForm","roleList","phone","email","role_id","WrapUserForm","reqAddUser","reqUpdateUser","userList","isModalShow","User","userForm","roleId","roleNames","handleShowUpdate","handleDeleteUser","handleShowAdd","userId","getUserList","roles","users","hanleModalCancel","handleSubmitForm","isUpdate","TreeNode","AuthForm","renderTreeNodes","getMenus","checkedKeys","handleCheck","Array","isArray","Fragment","disabled","checkable","defaultExpandAll","onCheck","nextProps","preState","reqAddRole","roleName","seletedRole","isAddFormShow","isAuthFormShow","Role","authForm","tableOnRow","getRoleList","newRole","auth_name","info","rowSelection","selectedRowKeys","onSelect","onRow","stores","handleupdate","sale","getOption","text","tooltip","legend","xAxis","yAxis","series","Pie","subtext","x","trigger","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","Math","random","NotFound","Footer","Sider","Content","Admin","from","textAlign","App","initUser","get","rootReducer","combineReducers","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.f6e098d8.chunk.js","sourcesContent":["// 对密码验证\r\nexport function validatePwd(rule: any, value: string, callback: any) {\r\n  if (!value.trim()) {\r\n    callback('请输入密码')\r\n  } else if (value.length < 4) {\r\n    callback('密码长度至少为4位')\r\n  } else if (value.length > 12) {\r\n    callback('密码长度至多为12位')\r\n  } else {\r\n    callback()\r\n  }\r\n}\r\n\r\n//对价格验证\r\nexport function validatePrice(rule: any, value: string, callback: any) {\r\n  if (+value > 0) {\r\n    callback()\r\n  } else {\r\n    callback('商品价格需要大于0')\r\n  }\r\n}\r\n","export const SET_HEAD_TITLE = 'set_head_title'\r\nexport const GET_USER_INFO = 'get_user_info'\r\nexport const REMOVE_USER = 'remove_user'\r\n","import axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\nconst service = axios.create({\r\n  baseURL: '/api/',\r\n  timeout: 5000\r\n})\r\n\r\nservice.interceptors.request.use(\r\n  config => {\r\n    return config\r\n  },\r\n  err => {\r\n    message.error(err.message)\r\n    return new Promise(() => {})\r\n  }\r\n)\r\n\r\nservice.interceptors.response.use(\r\n  response => {\r\n    const { status, msg } = response.data\r\n    if (status === 0) {\r\n      return response\r\n    } else {\r\n      message.error(msg)\r\n      return false as any\r\n    }\r\n  },\r\n  err => {\r\n    message.error(err.message)\r\n    return new Promise(() => {})\r\n  }\r\n)\r\n\r\nexport default service\r\n","import jsonp from 'jsonp'\r\nimport request from '@/utils/request'\r\nimport Response from '@/interface/Response'\r\n\r\nexport function reqLogin(form: {\r\n  username: string\r\n  password: string\r\n}): Response {\r\n  return request({\r\n    url: '/login',\r\n    method: 'post',\r\n    data: form\r\n  })\r\n}\r\nexport function reqWeather(\r\n  city: string\r\n): Promise<{\r\n  url: string\r\n  weather: string\r\n}> {\r\n  const ak = '3p49MVra6urFRGOT9s8UBWr2'\r\n  const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=${ak}`\r\n  return new Promise((resolve, reject) => {\r\n    jsonp(url, (error, data) => {\r\n      if (!error && data.status === 'success') {\r\n        const { dayPictureUrl: url, weather } = data.results[0].weather_data[0]\r\n        resolve({ url, weather })\r\n      } else {\r\n        reject(error)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nexport function reqDeleteImgs(name: string): Response {\r\n  return request({\r\n    url: '/manage/img/delete',\r\n    method: 'post',\r\n    data: {\r\n      name\r\n    }\r\n  })\r\n}\r\n","import store from 'store'\r\nimport { IUserListItem } from '@/interface/User'\r\nimport { IRoleListItem } from '@/interface/Role'\r\nexport type LoginUser = IUserListItem & { role?: IRoleListItem }\r\nconst auth_key = 'user_key'\r\n\r\nexport function setUser(user: LoginUser) {\r\n  store.set(auth_key, user)\r\n}\r\n\r\nexport function getUser(): LoginUser {\r\n  return store.get(auth_key) || {}\r\n}\r\n\r\nexport function removeUser() {\r\n  store.remove(auth_key)\r\n}\r\n","import { Action, Dispatch } from 'redux'\r\nimport { SET_HEAD_TITLE, GET_USER_INFO, REMOVE_USER } from './action-types'\r\nimport { reqLogin } from '@/api/admin'\r\nimport { setUser, removeUser } from '@/utils/auth'\r\nimport { LoginUser } from '@/utils/auth'\r\nexport type ActionType<T = any> = Action<string> & { data: T }\r\n\r\nexport function setHeadTitle(headTitle: string): ActionType<string> {\r\n  return {\r\n    type: SET_HEAD_TITLE,\r\n    data: headTitle\r\n  }\r\n}\r\n\r\nexport function getUserInfo(user: LoginUser): ActionType<LoginUser> {\r\n  return {\r\n    type: GET_USER_INFO,\r\n    data: user\r\n  }\r\n}\r\n\r\nexport function logout(): ActionType<LoginUser> {\r\n  removeUser()\r\n  return {\r\n    type: REMOVE_USER,\r\n    data: {} as LoginUser\r\n  }\r\n}\r\n\r\n// 登录的异步action,cb接收回调\r\nexport function login(\r\n  form: { username: string; password: string },\r\n  cb?: () => void\r\n) {\r\n  return async (dispatch: Dispatch) => {\r\n    const res = await reqLogin(form)\r\n    if (res) {\r\n      const user = res.data.data\r\n      setUser(user)\r\n      dispatch(getUserInfo(user))\r\n    } else {\r\n      cb && cb()\r\n    }\r\n  }\r\n}\r\n","import React, { Component, FormEventHandler } from 'react'\r\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Icon, Button, Input } from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nimport { validatePwd } from '@/utils/validate'\r\nimport { login } from '@/redux/action'\r\nimport logo from '@/assets/images/logo.png'\r\nimport './Login.less'\r\nimport { RootState } from '@/redux/reducers'\r\nimport { LoginUser } from '@/utils/auth'\r\n\r\nconst initState = {\r\n  loading: false\r\n}\r\ninterface IProps extends FormComponentProps {\r\n  user: LoginUser\r\n  login: typeof login\r\n}\r\ntype State = Readonly<typeof initState>\r\n\r\nclass Login extends Component<IProps & RouteComponentProps, State> {\r\n  state: State = initState\r\n\r\n  private handleSubmit: FormEventHandler = e => {\r\n    e.preventDefault()\r\n    // 获取form\r\n    const { form } = this.props\r\n    form.validateFields((err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        this.setState({\r\n          loading: true\r\n        })\r\n        const { username, password } = values\r\n        this.props.login({ username, password }, () => {\r\n          this.setState({ loading: false })\r\n        })\r\n      }\r\n    })\r\n    // // 获取表单项输入数据\r\n    // const values = form.getFieldsValue()\r\n  }\r\n\r\n  render() {\r\n    // 如果用户已登录自动跳转到管理界面\r\n    const { user } = this.props\r\n    if (user && user._id) {\r\n      return <Redirect to='/home' />\r\n    }\r\n    const { getFieldDecorator } = this.props.form\r\n    const { loading } = this.state\r\n    return (\r\n      <div className='login'>\r\n        <header className='login-header'>\r\n          <img src={logo} alt='logo' />\r\n          <h1>React后台管理系统</h1>\r\n        </header>\r\n        <section className='login-content'>\r\n          <h2>用户登录</h2>\r\n          <Form onSubmit={this.handleSubmit} className='login-form'>\r\n            <Form.Item>\r\n              {getFieldDecorator('username', {\r\n                validateFirst: true,\r\n                initialValue: '',\r\n                // 声明式验证\r\n                rules: [\r\n                  { required: true, whitespace: true, message: '请输入用户名' },\r\n                  { min: 4, message: '用户名至少为4位' },\r\n                  { max: 12, message: '用户名最多为12位' },\r\n                  {\r\n                    pattern: /^[A-Za-z0-9_]+$/,\r\n                    message: '用户名必须是英文、数字或下划线组成'\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }} />\r\n                  }\r\n                  placeholder='用户名'\r\n                  autoComplete='current-username'\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator('password', {\r\n                //自定义校验\r\n                validateFirst: true,\r\n                initialValue: '',\r\n                rules: [{ validator: validatePwd }]\r\n              })(\r\n                <Input\r\n                  prefix={\r\n                    <Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />\r\n                  }\r\n                  type='password'\r\n                  placeholder='密码'\r\n                  autoComplete='current-password'\r\n                />\r\n              )}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                loading={loading}\r\n                type='primary'\r\n                htmlType='submit'\r\n                className='login-form-button'\r\n              >\r\n                登录\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// 经过包装后的Login组件\r\nconst WrapLogin = Form.create<IProps & RouteComponentProps>()(Login)\r\nconst mapStateToProps = (state: RootState) => {\r\n  return {\r\n    user: state.user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  login\r\n} as any\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WrapLogin)\r\n","export interface IMenuListItem {\r\n  title: string\r\n  key: string\r\n  icon: string\r\n  isPublic?: boolean\r\n  children?: IMenuListItem[]\r\n}\r\nexport type IMenuList = IMenuListItem[]\r\nconst menuList: IMenuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: 'home', // 图标名称\r\n    isPublic: true // 公开的\r\n  },\r\n  {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: 'appstore',\r\n    children: [\r\n      // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: 'bars'\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: 'tool'\r\n      }\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: 'user'\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: 'safety'\r\n  },\r\n\r\n  {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: 'area-chart',\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: 'bar-chart'\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: 'line-chart'\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: 'pie-chart'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    title: '订单管理',\r\n    key: '/order',\r\n    icon: 'windows'\r\n  }\r\n]\r\n\r\nexport default menuList\r\n","import React, { Component } from 'react'\r\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Menu, Icon } from 'antd'\r\nimport { setHeadTitle } from '@/redux/action'\r\nimport menuList, { IMenuList, IMenuListItem } from '@/config/menuList'\r\nimport logo from '@/assets/images/logo.png'\r\nimport './index.less'\r\nimport { LoginUser } from '@/utils/auth'\r\nimport { RootState } from '@/redux/reducers'\r\nconst { SubMenu } = Menu\r\n\r\ninterface IProps extends RouteComponentProps {\r\n  setHeadTitle: typeof setHeadTitle\r\n  user: LoginUser\r\n}\r\n\r\nclass LeftNav extends Component<IProps> {\r\n  private openKey = ''\r\n  private menuNodes: JSX.Element[]\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    this.menuNodes = this.getMenuList_reduce(menuList)\r\n  }\r\n  private filterMenus = (item: IMenuListItem) => {\r\n    const { key, isPublic } = item\r\n    const username = this.props.user.username\r\n    if (username === 'admin') {\r\n      return true\r\n    }\r\n    const menus = this.props.user.role!.menus\r\n    if (isPublic || menus.includes(key)) {\r\n      return true\r\n    } else if (item.children) {\r\n      return !!item.children.find(child => menus.includes(child.key))\r\n    }\r\n    return false\r\n  }\r\n  private getMenuList = (menuList: IMenuList) => {\r\n    const filterMenus = menuList.filter(item => {\r\n      return this.filterMenus(item)\r\n    })\r\n    return filterMenus.map(item => {\r\n      const { pathname } = this.props.location\r\n      if (item.children) {\r\n        const cItem = item.children.find(\r\n          cItem => pathname.indexOf(cItem.key) === 0\r\n        )\r\n        if (cItem) {\r\n          this.openKey = item.key\r\n        }\r\n        return (\r\n          <SubMenu\r\n            key={item.key}\r\n            title={\r\n              <span>\r\n                <Icon type={item.icon} />\r\n                <span>{item.title}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {this.getMenuList(item.children)}\r\n          </SubMenu>\r\n        )\r\n      } else {\r\n        if (item.key === pathname || pathname.indexOf(item.key) === 0) {\r\n          this.props.setHeadTitle(item.title)\r\n        }\r\n        return (\r\n          <Menu.Item key={item.key}>\r\n            <Link\r\n              to={item.key}\r\n              onClick={() => this.props.setHeadTitle(item.title)}\r\n            >\r\n              <Icon type={item.icon} />\r\n              <span>{item.title}</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        )\r\n      }\r\n    })\r\n  }\r\n  private getMenuList_reduce = (menuList: IMenuList) => {\r\n    return menuList.reduce<JSX.Element[]>((pre, item) => {\r\n      // 过滤\r\n      const { pathname } = this.props.location\r\n      if (this.filterMenus(item)) {\r\n        if (item.children) {\r\n          const cItem = item.children.find(\r\n            cItem => pathname.indexOf(cItem.key) === 0\r\n          )\r\n          if (cItem) {\r\n            this.openKey = item.key\r\n          }\r\n          pre.push(\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n                  <Icon type={item.icon} />\r\n                  <span>{item.title}</span>\r\n                </span>\r\n              }\r\n            >\r\n              {this.getMenuList_reduce(item.children)}\r\n            </SubMenu>\r\n          )\r\n        } else {\r\n          if (item.key === pathname || pathname.indexOf(item.key) === 0) {\r\n            this.props.setHeadTitle(item.title)\r\n          }\r\n\r\n          pre.push(\r\n            <Menu.Item key={item.key}>\r\n              <Link\r\n                to={item.key}\r\n                onClick={() => this.props.setHeadTitle(item.title)}\r\n              >\r\n                <Icon type={item.icon} />\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          )\r\n        }\r\n      }\r\n      return pre\r\n    }, [])\r\n  }\r\n  render() {\r\n    let { pathname } = this.props.location\r\n    if (pathname.indexOf('/product') === 0) {\r\n      pathname = '/product'\r\n    }\r\n    return (\r\n      <div className='left-nav'>\r\n        <Link to='/' className='left-nav-header'>\r\n          <img src={logo} alt='logo' />\r\n          <h1>硅谷后台</h1>\r\n        </Link>\r\n        <Menu\r\n          mode='inline'\r\n          theme='dark'\r\n          selectedKeys={[pathname]}\r\n          defaultOpenKeys={[this.openKey]}\r\n        >\r\n          {this.menuNodes}\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  return {\r\n    user: state.user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setHeadTitle\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LeftNav))\r\n","function parseNumber(num: number) {\r\n  return num < 10 ? '0' + num : num\r\n}\r\nexport function formatDate(time: string | number | Date) {\r\n  if (!time) {\r\n    return ''\r\n  } else {\r\n    const date = new Date(time)\r\n    const Y = date.getFullYear()\r\n    const M = parseNumber(date.getMonth() + 1)\r\n    const D = parseNumber(date.getDate())\r\n    const h = parseNumber(date.getHours())\r\n    const m = parseNumber(date.getMinutes())\r\n    const s = parseNumber(date.getSeconds())\r\n    return `${Y}-${M}-${D} ${h}:${m}:${s}`\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { RootState } from '@/redux/reducers'\r\nimport { Button, message, Modal } from 'antd'\r\nimport { reqWeather } from '@/api/admin'\r\nimport { formatDate } from '@/utils/time'\r\nimport { logout } from '@/redux/action'\r\nimport { LoginUser } from '@/utils/auth'\r\nimport './index.less'\r\nconst initState = {\r\n  currentTime: formatDate(Date.now()),\r\n  weatherPicUrl: '',\r\n  weather: ''\r\n}\r\ntype State = Readonly<typeof initState>\r\n\r\ninterface IProps extends RouteComponentProps {\r\n  headTitle: string\r\n  user: LoginUser\r\n  logout: typeof logout\r\n}\r\n\r\nclass Header extends Component<IProps, State> {\r\n  state: State = initState\r\n  private timer!: NodeJS.Timer\r\n  componentDidMount() {\r\n    this.getTime()\r\n    this.getWeather()\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer)\r\n  }\r\n  private getTime = () => {\r\n    this.timer = setInterval(() => {\r\n      const currentTime = formatDate(Date.now())\r\n      this.setState({ currentTime })\r\n    }, 1000)\r\n  }\r\n  private getWeather = async () => {\r\n    try {\r\n      const res = await reqWeather('成都')\r\n\r\n      this.setState({\r\n        weather: res.weather,\r\n        weatherPicUrl: res.url\r\n      })\r\n    } catch (err) {\r\n      message.error('获取天气信息失败')\r\n    }\r\n  }\r\n  private handleLogout = () => {\r\n    Modal.confirm({\r\n      title: '提示',\r\n      content: '确认退出吗？',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      maskClosable: true,\r\n      onOk: () => {\r\n        this.props.logout()\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { currentTime, weatherPicUrl, weather } = this.state\r\n    const { username } = this.props.user\r\n    const title = this.props.headTitle\r\n\r\n    return (\r\n      <div className='header'>\r\n        <div className='header-top'>\r\n          <span>欢迎，{username}</span>\r\n          <Button type='link' onClick={this.handleLogout}>\r\n            退出\r\n          </Button>\r\n        </div>\r\n        <div className='header-bottom'>\r\n          <div className='header-bottom-left'>{title}</div>\r\n          <div className='header-bottom-right'>\r\n            <span>{currentTime}</span>\r\n            <img src={weatherPicUrl} alt='weather' />\r\n            <span>{weather}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  headTitle: state.headTitle,\r\n  user: state.user\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  logout\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Header))\r\n","import React from 'react'\r\nimport { Chart, Geom, Axis, Tooltip, Legend } from 'bizcharts'\r\nimport DataSet from '@antv/data-set'\r\n\r\nexport default class Line extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        month: 'Jan',\r\n        a: 7.0,\r\n        b: 3.9,\r\n        c: 5.9\r\n      },\r\n      {\r\n        month: 'Feb',\r\n        a: 6.9,\r\n        b: 4.2,\r\n        c: 1.9\r\n      },\r\n      {\r\n        month: 'Mar',\r\n        a: 9.5,\r\n        b: 5.7,\r\n        c: 3.9\r\n      },\r\n      {\r\n        month: 'Apr',\r\n        a: 14.5,\r\n        b: 8.5,\r\n        c: 5.5\r\n      },\r\n      {\r\n        month: 'May',\r\n        a: 18.4,\r\n        b: 11.9,\r\n        c: 8.9\r\n      },\r\n      {\r\n        month: 'Jun',\r\n        a: 21.5,\r\n        b: 15.2,\r\n        c: 10.0\r\n      },\r\n      {\r\n        month: 'Jul',\r\n        a: 25.2,\r\n        b: 17.0,\r\n        c: 12.9\r\n      },\r\n      {\r\n        month: 'Aug',\r\n        a: 26.5,\r\n        b: 16.6,\r\n        c: 15.9\r\n      },\r\n      {\r\n        month: 'Sep',\r\n        a: 23.3,\r\n        b: 14.2,\r\n        c: 20.7\r\n      },\r\n      {\r\n        month: 'Oct',\r\n        a: 18.3,\r\n        b: 10.3,\r\n        c: 25.9\r\n      },\r\n      {\r\n        month: 'Nov',\r\n        a: 13.9,\r\n        b: 6.6,\r\n        c: 30.9\r\n      },\r\n      {\r\n        month: 'Dec',\r\n        a: 9.6,\r\n        b: 4.8,\r\n        c: 35.9\r\n      }\r\n    ]\r\n    const ds: any = new DataSet()\r\n    const dv = ds.createView().source(data)\r\n    dv.transform({\r\n      type: 'fold',\r\n      fields: ['a', 'b', 'c'],\r\n      // 展开字段集\r\n      key: 'city',\r\n      // key字段\r\n      value: 'temperature' // value字段\r\n    })\r\n    const cols = {\r\n      month: {\r\n        range: [0, 1]\r\n      }\r\n    }\r\n    return (\r\n      <div style={{ float: 'right', width: 750, height: 300 }}>\r\n        <Chart height={250} data={dv} scale={cols} forceFit>\r\n          <Legend />\r\n          <Axis name='month' />\r\n          <Axis\r\n            name='temperature'\r\n            label={{\r\n              formatter: (val: string) => `${val}万个`\r\n            }}\r\n          />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: 'y'\r\n            }}\r\n          />\r\n          <Geom\r\n            type='line'\r\n            position='month*temperature'\r\n            size={2}\r\n            color={'city'}\r\n            shape={'smooth'}\r\n          />\r\n          <Geom\r\n            type='point'\r\n            position='month*temperature'\r\n            size={4}\r\n            shape={'circle'}\r\n            color={'city'}\r\n            style={{\r\n              stroke: '#fff',\r\n              lineWidth: 1\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Chart, Geom, Axis, Tooltip } from 'bizcharts'\r\n\r\nexport default class Bar extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        year: '1月',\r\n        sales: 38\r\n      },\r\n      {\r\n        year: '2月',\r\n        sales: 52\r\n      },\r\n      {\r\n        year: '3月',\r\n        sales: 61\r\n      },\r\n      {\r\n        year: '4月',\r\n        sales: 145\r\n      },\r\n      {\r\n        year: '5月',\r\n        sales: 48\r\n      },\r\n      {\r\n        year: '6月',\r\n        sales: 38\r\n      },\r\n      {\r\n        year: '7月',\r\n        sales: 28\r\n      },\r\n      {\r\n        year: '8月',\r\n        sales: 38\r\n      },\r\n      {\r\n        year: '59月',\r\n        sales: 68\r\n      },\r\n      {\r\n        year: '10月',\r\n        sales: 38\r\n      },\r\n      {\r\n        year: '11月',\r\n        sales: 58\r\n      },\r\n      {\r\n        year: '12月',\r\n        sales: 38\r\n      }\r\n    ]\r\n    const cols = {\r\n      sales: {\r\n        tickInterval: 20\r\n      }\r\n    }\r\n    return (\r\n      <div style={{ width: '100%', marginLeft: -30 }}>\r\n        <Chart height={338} data={data} scale={cols} forceFit>\r\n          <Axis name='year' />\r\n          <Axis name='sales' />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: 'y'\r\n            }}\r\n          />\r\n          <Geom type='interval' position='year*sales' />\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Icon, Card, Statistic, DatePicker, Timeline } from 'antd'\r\nimport moment from 'moment'\r\n\r\nimport Line from './Line'\r\nimport Bar from './Bar'\r\nimport './index.less'\r\n\r\nconst dateFormat = 'YYYY/MM/DD'\r\nconst { RangePicker } = DatePicker\r\n\r\nconst initState = {\r\n  isVisited: true\r\n}\r\ntype State = Readonly<typeof initState>\r\n\r\nexport default class Home extends Component<object, State> {\r\n  state: State = initState\r\n\r\n  handleChange = (isVisited: boolean) => {\r\n    return () => this.setState({ isVisited })\r\n  }\r\n\r\n  render() {\r\n    const { isVisited } = this.state\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Card\r\n          className='home-card'\r\n          title='商品总量'\r\n          extra={\r\n            <Icon style={{ color: 'rgba(0,0,0,.45)' }} type='question-circle' />\r\n          }\r\n          style={{ width: 250 }}\r\n          headStyle={{ color: 'rgba(0,0,0,.45)' }}\r\n        >\r\n          <Statistic\r\n            value={1128163}\r\n            suffix='个'\r\n            style={{ fontWeight: 'bolder' }}\r\n          />\r\n          <Statistic\r\n            value={15}\r\n            valueStyle={{ fontSize: 15 }}\r\n            prefix={'周同比'}\r\n            suffix={\r\n              <div>\r\n                %\r\n                <Icon\r\n                  style={{ color: 'red', marginLeft: 10 }}\r\n                  type='arrow-down'\r\n                />\r\n              </div>\r\n            }\r\n          />\r\n          <Statistic\r\n            value={10}\r\n            valueStyle={{ fontSize: 15 }}\r\n            prefix={'日同比'}\r\n            suffix={\r\n              <div>\r\n                %\r\n                <Icon\r\n                  style={{ color: '#3f8600', marginLeft: 10 }}\r\n                  type='arrow-up'\r\n                />\r\n              </div>\r\n            }\r\n          />\r\n        </Card>\r\n\r\n        <Line />\r\n\r\n        <Card\r\n          className='home-content'\r\n          title={\r\n            <div className='home-menu'>\r\n              <span\r\n                className={\r\n                  isVisited\r\n                    ? 'home-menu-active home-menu-visited'\r\n                    : 'home-menu-visited'\r\n                }\r\n                onClick={this.handleChange(true)}\r\n              >\r\n                访问量\r\n              </span>\r\n              <span\r\n                className={isVisited ? '' : 'home-menu-active'}\r\n                onClick={this.handleChange(false)}\r\n              >\r\n                销售量\r\n              </span>\r\n            </div>\r\n          }\r\n          extra={\r\n            <RangePicker\r\n              defaultValue={[\r\n                moment('2019/01/01', dateFormat),\r\n                moment('2019/06/01', dateFormat)\r\n              ]}\r\n              format={dateFormat}\r\n            />\r\n          }\r\n        >\r\n          <Card\r\n            className='home-table-left'\r\n            title={isVisited ? '访问趋势' : '销售趋势'}\r\n            bodyStyle={{ padding: 0, height: 275 }}\r\n            extra={<Icon type='reload' />}\r\n          >\r\n            <Bar />\r\n          </Card>\r\n\r\n          <Card\r\n            title='任务'\r\n            extra={<Icon type='reload' />}\r\n            className='home-table-right'\r\n          >\r\n            <Timeline>\r\n              <Timeline.Item color='green'>新版本迭代会</Timeline.Item>\r\n              <Timeline.Item color='green'>完成网站设计初版</Timeline.Item>\r\n              <Timeline.Item color='red'>\r\n                <p>联调接口</p>\r\n                <p>功能验收</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item>\r\n                <p>登录功能设计</p>\r\n                <p>权限验证</p>\r\n                <p>页面排版</p>\r\n              </Timeline.Item>\r\n            </Timeline>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { forwardRef, useImperativeHandle } from 'react'\r\nimport { Form, Select, Input } from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nimport { ICategoryTableItem } from '@/interface/Category'\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\ninterface IProps extends FormComponentProps {\r\n  categoryList: ICategoryTableItem[]\r\n  parentId: string\r\n}\r\nconst AddForm = forwardRef<FormComponentProps, IProps>(\r\n  ({ form, categoryList, parentId }: IProps, ref) => {\r\n    useImperativeHandle(ref, () => ({\r\n      form\r\n    }))\r\n    const { getFieldDecorator } = form\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {getFieldDecorator('parentId', {\r\n            initialValue: parentId\r\n          })(\r\n            <Select>\r\n              <Option value='0'>一级分类</Option>\r\n              {categoryList.map(item => (\r\n                <Option value={item._id}>{item.name}</Option>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        </Item>\r\n        <Item>\r\n          {getFieldDecorator('categoryName', {\r\n            initialValue: '',\r\n            rules: [\r\n              { required: true, whitespace: true, message: '请输入分类名' }\r\n            ]\r\n          })(<Input placeholder='请输入分类名称' />)}\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n)\r\n\r\n// class AddForm extends Component<IProps> {\r\n//   render() {\r\n//     const { categoryList, parentId } = this.props\r\n//     const { getFieldDecorator } = this.props.form\r\n//     return (\r\n//       <Form>\r\n//         <Item>\r\n//           {getFieldDecorator('parentId', {\r\n//             initialValue: parentId\r\n//           })(\r\n//             <Select>\r\n//               <Option value='0'>一级分类</Option>\r\n//               {categoryList.map(item => (\r\n//                 <Option value={item._id}>{item.name}</Option>\r\n//               ))}\r\n//             </Select>\r\n//           )}\r\n//         </Item>\r\n//         <Item>\r\n//           {getFieldDecorator('categoryName', {\r\n//             initialValue: ''\r\n//           })(<Input placeholder='请输入分类名称' />)}\r\n//         </Item>\r\n//       </Form>\r\n//     )\r\n//   }\r\n// }\r\n// 经过包装后的Login组件\r\nconst WrapAddForm = Form.create<IProps>()(AddForm)\r\n\r\nexport default WrapAddForm\r\n","import React, { forwardRef, useImperativeHandle } from 'react'\r\nimport { Form, Input } from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nconst Item = Form.Item\r\ninterface IProps extends FormComponentProps {\r\n  categoryName: string\r\n}\r\nconst UpdateForm = forwardRef<FormComponentProps, IProps>(\r\n  ({ form, categoryName }: IProps, ref) => {\r\n    useImperativeHandle(ref, () => ({\r\n      form\r\n    }))\r\n    const { getFieldDecorator } = form\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {getFieldDecorator('categoryName', {\r\n            initialValue: categoryName,\r\n            rules: [\r\n              { required: true, whitespace: true, message: '请输入分类名' }\r\n            ]\r\n          })(<Input placeholder='请输入分类名称' />)}\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n)\r\n\r\n// class UpdateForm extends Component<IProps> {\r\n//   render() {\r\n//     const {\r\n//       form: { getFieldDecorator },\r\n//       categoryName\r\n//     } = this.props\r\n//     return (\r\n//       <Form>\r\n//         <Item>\r\n//           {getFieldDecorator('categoryName', {\r\n//             initialValue: categoryName\r\n//           })(<Input placeholder='请输入分类名称' />)}\r\n//         </Item>\r\n//       </Form>\r\n//     )\r\n//   }\r\n// }\r\n// 经过包装后的Login组件\r\nconst WrapUpdateForm = Form.create<IProps>()(UpdateForm)\r\n\r\nexport default WrapUpdateForm\r\n","import request from '@/utils/request'\r\nimport Response from '@/interface/Response'\r\n\r\nexport function reqGetCategoryList(parentId: string): Response {\r\n  return request({\r\n    url: '/manage/category/list',\r\n    method: 'get',\r\n    params: {\r\n      parentId\r\n    }\r\n  })\r\n}\r\n\r\nexport function reqGetCategory(categoryId: string): Response {\r\n  return request({\r\n    url: '/manage/category/info',\r\n    method: 'get',\r\n    params: {\r\n      categoryId\r\n    }\r\n  })\r\n}\r\n\r\nexport function reqAddCategory(form: {\r\n  categoryName: string\r\n  parentId: string\r\n}): Response {\r\n  return request({\r\n    url: '/manage/category/add',\r\n    method: 'post',\r\n    data: form\r\n  })\r\n}\r\n\r\nexport function reqUpdateCategory(form: {\r\n  categoryName: string\r\n  categoryId: string\r\n}): Response {\r\n  return request({\r\n    url: '/manage/category/update',\r\n    method: 'post',\r\n    data: form\r\n  })\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Icon, Table, Modal } from 'antd'\r\nimport { ColumnProps } from 'antd/es/table'\r\nimport AddForm from './AddForm'\r\nimport UpdateForm from './UpdateForm'\r\nimport {\r\n  reqGetCategoryList,\r\n  reqUpdateCategory,\r\n  reqAddCategory\r\n} from '@/api/category'\r\nimport { ICategoryTableItem } from '@/interface/Category'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\n/**\r\n * 商品分类\r\n */\r\nconst initState = {\r\n  loading: false,\r\n  categoryList: [] as ICategoryTableItem[],\r\n  subCategoryList: [] as ICategoryTableItem[],\r\n  parentId: '0', // 当前需要展示的分类列表的父分类Id\r\n  parentName: '', //当前需要显示的分类列表的父分类名称\r\n  showStatus: 0,\r\n  confirmLoading: false\r\n}\r\ntype State = Readonly<typeof initState>\r\n\r\nclass Category extends Component<any, State> {\r\n  state: State = initState\r\n  private updateForm: React.RefObject<FormComponentProps>\r\n  private addForm: React.RefObject<FormComponentProps>\r\n  private columns: ColumnProps<ICategoryTableItem>[] = [\r\n    {\r\n      title: '分类名称',\r\n      dataIndex: 'name'\r\n    },\r\n    {\r\n      title: '操作',\r\n      width: 300,\r\n      align: 'center',\r\n      render: category => (\r\n        <div>\r\n          <Button\r\n            type='link'\r\n            onClick={() => {\r\n              this.handleShowModal(2, category)\r\n            }}\r\n          >\r\n            修改分类\r\n          </Button>\r\n          {this.state.parentId === '0' ? (\r\n            <Button\r\n              type='link'\r\n              onClick={() => {\r\n                this.handleShowSubCategory(category)\r\n              }}\r\n            >\r\n              查看子分类\r\n            </Button>\r\n          ) : null}\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n  private updateCategory?: ICategoryTableItem\r\n\r\n  constructor(props: object) {\r\n    super(props)\r\n    this.updateForm = React.createRef()\r\n    this.addForm = React.createRef()\r\n  }\r\n\r\n  private getCategoryList = async (parentId?: string) => {\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    const res = await reqGetCategoryList(parentId || this.state.parentId)\r\n    if (res) {\r\n      if (this.state.parentId === '0') {\r\n        this.setState({\r\n          loading: false,\r\n          categoryList: res.data.data\r\n        })\r\n      } else {\r\n        this.setState({\r\n          loading: false,\r\n          subCategoryList: res.data.data\r\n        })\r\n      }\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    }\r\n  }\r\n  private handleShowSubCategory = (category: ICategoryTableItem) => {\r\n    const { _id, name } = category\r\n    this.setState(\r\n      {\r\n        parentId: _id,\r\n        parentName: name\r\n      },\r\n      () => {\r\n        this.getCategoryList()\r\n      }\r\n    )\r\n  }\r\n  private handleShowCategory = () => {\r\n    this.setState({\r\n      parentId: '0',\r\n      parentName: ''\r\n    })\r\n  }\r\n  private handleCancelModal = () => {\r\n    const { showStatus } = this.state\r\n    if (showStatus === 1) {\r\n      this.addForm.current!.form.resetFields()\r\n    } else if (showStatus === 2) {\r\n      this.updateForm.current!.form.resetFields()\r\n    }\r\n    this.setState({\r\n      showStatus: 0\r\n    })\r\n  }\r\n  private handleShowModal = (status: number, category?: ICategoryTableItem) => {\r\n    if (category) {\r\n      this.updateCategory = category\r\n    }\r\n    this.setState({\r\n      showStatus: status\r\n    })\r\n  }\r\n  private handleSubmitAdd = () => {\r\n    const form = this.addForm.current!.form\r\n    form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        this.setState({\r\n          confirmLoading: true\r\n        })\r\n        const { categoryName, parentId } = values\r\n        const res = await reqAddCategory({ categoryName, parentId })\r\n        if (res) {\r\n          this.setState(\r\n            {\r\n              confirmLoading: false,\r\n              showStatus: 0\r\n            },\r\n            () => {\r\n              form.resetFields()\r\n              if (parentId === this.state.parentId) {\r\n                // 只有加入的分类与当前分类项一致或添加一级分类时才重新获取\r\n                this.getCategoryList()\r\n              } else if (parentId === '0') {\r\n                this.getCategoryList('0')\r\n              }\r\n            }\r\n          )\r\n        } else {\r\n          this.setState({\r\n            confirmLoading: false\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  private handleSubmitUpdate = () => {\r\n    const form = this.updateForm.current!.form\r\n    form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        this.setState({\r\n          confirmLoading: true\r\n        })\r\n        const { categoryName } = values\r\n        const categoryId = this.updateCategory!._id\r\n        const res = await reqUpdateCategory({ categoryName, categoryId })\r\n        if (res) {\r\n          this.setState(\r\n            {\r\n              confirmLoading: false,\r\n              showStatus: 0\r\n            },\r\n            () => {\r\n              form.resetFields()\r\n              this.getCategoryList()\r\n            }\r\n          )\r\n        } else {\r\n          this.setState({\r\n            confirmLoading: false\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    this.getCategoryList()\r\n  }\r\n  render() {\r\n    const title =\r\n      this.state.parentId === '0' ? (\r\n        '一级分类列表'\r\n      ) : (\r\n        <div>\r\n          <Button type='link' onClick={this.handleShowCategory}>\r\n            一级分类列表\r\n          </Button>\r\n          <Icon type='arrow-right' style={{ marginRight: 5 }} />\r\n          {this.state.parentName}\r\n        </div>\r\n      )\r\n    const extra = (\r\n      <Button\r\n        type='primary'\r\n        onClick={() => {\r\n          this.handleShowModal(1)\r\n        }}\r\n      >\r\n        <Icon type='plus' />\r\n        添加\r\n      </Button>\r\n    )\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table<ICategoryTableItem>\r\n          rowKey='_id'\r\n          bordered\r\n          loading={this.state.loading}\r\n          dataSource={\r\n            this.state.parentId === '0'\r\n              ? this.state.categoryList\r\n              : this.state.subCategoryList\r\n          }\r\n          columns={this.columns}\r\n          pagination={{ defaultPageSize: 5, showQuickJumper: true }}\r\n        />\r\n        <Modal\r\n          title='添加分类'\r\n          visible={this.state.showStatus === 1}\r\n          onCancel={this.handleCancelModal}\r\n          confirmLoading={this.state.confirmLoading}\r\n          onOk={this.handleSubmitAdd}\r\n          okText='确定'\r\n          cancelText='取消'\r\n          maskClosable={false}\r\n        >\r\n          <AddForm\r\n            categoryList={this.state.categoryList}\r\n            parentId={this.state.parentId}\r\n            wrappedComponentRef={this.addForm}\r\n          />\r\n        </Modal>\r\n        <Modal\r\n          title='更新分类'\r\n          visible={this.state.showStatus === 2}\r\n          onCancel={this.handleCancelModal}\r\n          onOk={this.handleSubmitUpdate}\r\n          confirmLoading={this.state.confirmLoading}\r\n          okText='确定'\r\n          cancelText='取消'\r\n          maskClosable={false}\r\n        >\r\n          <UpdateForm\r\n            categoryName={this.updateCategory ? this.updateCategory.name : ''}\r\n            wrappedComponentRef={this.updateForm}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Category\r\n","import request from '@/utils/request'\r\nimport Response from '@/interface/Response'\r\nimport { IProductListItem } from '@/interface/Product'\r\n\r\nexport function reqGetProductList(pageNum: number, pageSize: number): Response {\r\n  return request({\r\n    url: '/manage/product/list',\r\n    method: 'get',\r\n    params: {\r\n      pageNum,\r\n      pageSize\r\n    }\r\n  })\r\n}\r\n\r\nexport function reqSearchProduct(\r\n  pageNum: number,\r\n  pageSize: number,\r\n  searchName: string,\r\n  searchType: 'productName' | 'productDesc'\r\n): Response {\r\n  return request({\r\n    url: '/manage/product/search',\r\n    method: 'get',\r\n    params: {\r\n      pageNum,\r\n      pageSize,\r\n      [searchType]: searchName\r\n    }\r\n  })\r\n}\r\n\r\nexport function reqUpdateProductStatus(form: {\r\n  productId: string\r\n  status: 1 | 2\r\n}): Response {\r\n  return request({\r\n    url: '/manage/product/updateStatus',\r\n    method: 'post',\r\n    data: form\r\n  })\r\n}\r\n\r\nexport type AddProductForm = Pick<\r\n  IProductListItem,\r\n  Exclude<keyof IProductListItem, 'status' | '_id'>\r\n>\r\n\r\nexport function reqAddProduct(form: AddProductForm): Response {\r\n  return request({\r\n    url: '/manage/product/add',\r\n    method: 'post',\r\n    data: form\r\n  })\r\n}\r\n\r\nexport type UpdateProductForm = Pick<\r\n  IProductListItem,\r\n  Exclude<keyof IProductListItem, 'status'>\r\n>\r\n\r\nexport function reqUpdateProduct(form: UpdateProductForm): Response {\r\n  return request({\r\n    url: '/manage/product/update',\r\n    method: 'post',\r\n    data: form\r\n  })\r\n}\r\n","export const PAGE_SIZE = 5\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/'\r\n","import React, { Component } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { Card, Select, Input, Button, Icon, Table } from 'antd'\r\nimport { ColumnProps } from 'antd/es/table'\r\nimport { IProductListItem } from '@/interface/Product'\r\nimport {\r\n  reqGetProductList,\r\n  reqSearchProduct,\r\n  reqUpdateProductStatus\r\n} from '@/api/product'\r\nimport { PAGE_SIZE } from '@/config/common'\r\nconst Option = Select.Option\r\n\r\nconst initState = {\r\n  loading: false,\r\n  total: 0, // 商品总数量\r\n  currentPage: 1,\r\n  productList: [] as IProductListItem[],\r\n  searchType: 'productName' as 'productName' | 'productDesc',\r\n  searchName: ''\r\n}\r\ntype State = Readonly<typeof initState>\r\n\r\nclass ProductList extends Component<RouteComponentProps, State> {\r\n  state: State = initState\r\n  private columns: ColumnProps<IProductListItem>[] = [\r\n    {\r\n      title: '商品名称',\r\n      dataIndex: 'name',\r\n      align: 'center',\r\n      width: 200\r\n    },\r\n    {\r\n      title: '商品描述',\r\n      dataIndex: 'desc',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '价格',\r\n      dataIndex: 'price',\r\n      align: 'center',\r\n      width: 100,\r\n      render: price => '￥' + price\r\n    },\r\n    {\r\n      title: '状态',\r\n      align: 'center',\r\n      width: 100,\r\n      render: ({ status, _id }: IProductListItem) => {\r\n        const newStatus = status === 1 ? 2 : 1\r\n        return (\r\n          <div>\r\n            <Button\r\n              type='primary'\r\n              onClick={() => this.handleUpdateProductState(_id, newStatus)}\r\n            >\r\n              {status === 1 ? '下架' : '上架'}\r\n            </Button>\r\n            <span>{status === 1 ? '在售' : '已下架'}</span>\r\n          </div>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      title: '操作',\r\n      align: 'center',\r\n      width: 100,\r\n      render: product => {\r\n        return (\r\n          <div>\r\n            <Button\r\n              type='link'\r\n              onClick={() => {\r\n                this.props.history.push({\r\n                  pathname: '/product/detail',\r\n                  state: { product }\r\n                })\r\n              }}\r\n            >\r\n              详情\r\n            </Button>\r\n            <Button\r\n              type='link'\r\n              onClick={() =>\r\n                this.props.history.push({\r\n                  pathname: '/product/edit',\r\n                  state: { product }\r\n                })\r\n              }\r\n            >\r\n              修改\r\n            </Button>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n  ]\r\n  componentDidMount() {\r\n    this.getProductList(1)\r\n  }\r\n  private getProductList = async (\r\n    pageNum: number,\r\n    pageSize: number = PAGE_SIZE\r\n  ) => {\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    const { searchType, searchName } = this.state\r\n    let res = null\r\n    if (searchName.trim()) {\r\n      res = await reqSearchProduct(pageNum, pageSize, searchName, searchType)\r\n    } else {\r\n      res = await reqGetProductList(pageNum, pageSize)\r\n    }\r\n    if (res) {\r\n      const { total, list } = res.data.data\r\n      this.setState({\r\n        loading: false,\r\n        total,\r\n        productList: list\r\n      })\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    }\r\n  }\r\n  private handleSearchProduct = () => {\r\n    this.getProductList(1).then(() => {\r\n      this.setState({\r\n        currentPage: 1\r\n      })\r\n    })\r\n  }\r\n  private handleUpdateProductState = async (\r\n    productId: string,\r\n    status: 1 | 2\r\n  ) => {\r\n    const res = await reqUpdateProductStatus({ productId, status })\r\n    if (res) {\r\n      this.getProductList(this.state.currentPage)\r\n    }\r\n  }\r\n  render() {\r\n    const title = (\r\n      <div>\r\n        <Select\r\n          value={this.state.searchType}\r\n          style={{ width: 150 }}\r\n          onChange={(value: 'productName' | 'productDesc') => {\r\n            this.setState({\r\n              searchType: value\r\n            })\r\n          }}\r\n        >\r\n          <Option value='productName'>按名称搜索</Option>\r\n          <Option value='productDesc'>按描述搜索</Option>\r\n        </Select>\r\n        <Input\r\n          placeholder='关键字'\r\n          style={{ width: 150, margin: '0 15px' }}\r\n          value={this.state.searchName}\r\n          onChange={e => {\r\n            this.setState({\r\n              searchName: e.target.value\r\n            })\r\n          }}\r\n          onPressEnter={this.handleSearchProduct}\r\n        />\r\n        <Button type='primary' onClick={this.handleSearchProduct}>\r\n          搜索\r\n        </Button>\r\n      </div>\r\n    )\r\n    const extra = (\r\n      <Button\r\n        type='primary'\r\n        onClick={() => this.props.history.push('/product/add')}\r\n      >\r\n        <Icon type='plus' />\r\n        添加商品\r\n      </Button>\r\n    )\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table<IProductListItem>\r\n          loading={this.state.loading}\r\n          dataSource={this.state.productList}\r\n          columns={this.columns}\r\n          bordered\r\n          rowKey='_id'\r\n          pagination={{\r\n            total: this.state.total,\r\n            current: this.state.currentPage,\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true,\r\n            onChange: pageNum => {\r\n              this.setState({\r\n                currentPage: pageNum\r\n              })\r\n              this.getProductList(pageNum)\r\n            }\r\n          }}\r\n        />\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProductList\r\n","import React, { Component } from 'react'\r\nimport { Upload, Icon, Modal, message } from 'antd'\r\nimport { UploadFile as UploadFileOrigin } from 'antd/lib/upload/interface'\r\nimport { reqDeleteImgs } from '@/api/admin'\r\nimport { BASE_IMG_URL } from '@/config/common'\r\n\r\ntype UploadFile = UploadFileOrigin<{\r\n  status: number\r\n  data: any\r\n}>\r\n\r\nfunction getBase64(file: Blob) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader()\r\n    reader.readAsDataURL(file)\r\n    reader.onload = () => resolve(reader.result)\r\n    reader.onerror = error => reject(error)\r\n  })\r\n}\r\nconst initState = {\r\n  previewVisible: false,\r\n  previewImage: '',\r\n  fileList: [] as UploadFile[]\r\n}\r\ntype State = Readonly<typeof initState>\r\ninterface IProps {\r\n  imgs?: string[]\r\n}\r\n\r\nexport default class PicturesWall extends Component<IProps, State> {\r\n  state: State = initState\r\n\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    const imgs = this.props.imgs\r\n    if (imgs && imgs.length > 0) {\r\n      const fileList = imgs.map<any>((img, index) => ({\r\n        uid: -index,\r\n        name: img,\r\n        status: 'done',\r\n        url: BASE_IMG_URL + img\r\n      })) as UploadFile[]\r\n      // 改变初始化数据\r\n      initState.fileList = fileList\r\n    }\r\n  }\r\n  public getImgs = () => {\r\n    return this.state.fileList.map(file => file.name)\r\n  }\r\n  private handleCancel = () => this.setState({ previewVisible: false })\r\n\r\n  private handlePreview = async (file: UploadFile) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = (await getBase64(file.originFileObj!)) as string\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview!,\r\n      previewVisible: true\r\n    })\r\n  }\r\n\r\n  private handleChange = async ({\r\n    file,\r\n    fileList\r\n  }: {\r\n    file: UploadFile\r\n    fileList: UploadFile[]\r\n  }) => {\r\n    if (file.status === 'done') {\r\n      const res = file.response!\r\n      if (res.status === 0) {\r\n        const { name, url } = res.data\r\n        const realFile = fileList[fileList.length - 1] // 其实file和fileList不是一对象\r\n        realFile.name = name\r\n        realFile.url = url\r\n        file.url = url //这个其实在这里没用，但是被删除可以当做标识\r\n        message.success('上传图片成功')\r\n      } else {\r\n        // 不是axios请求的没有拦截\r\n        message.error('上传图片失败')\r\n      }\r\n    } else if (file.status === 'removed') {\r\n      if (file.url) {\r\n        const res = await reqDeleteImgs(file.name)\r\n        if (res) {\r\n          message.success('删除图片成功')\r\n        }\r\n      }\r\n    }\r\n    this.setState({ fileList })\r\n  }\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type='plus' />\r\n        <div>上传</div>\r\n      </div>\r\n    )\r\n    return (\r\n      <div className='clearfix'>\r\n        <Upload\r\n          action='/api/manage/img/upload'\r\n          accept='image/*'\r\n          name='image'\r\n          listType='picture-card'\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 9 ? null : uploadButton}\r\n        </Upload>\r\n        <Modal\r\n          visible={previewVisible}\r\n          footer={null}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <img\r\n            alt={previewImage}\r\n            style={{ width: '100%' }}\r\n            src={previewImage}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","/*\r\n用来指定商品详情的富文本编辑器组件\r\n */\r\nimport React, { Component } from 'react'\r\nimport { message } from 'antd'\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js'\r\nimport { Editor } from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\nconst initState = {\r\n  editorState: EditorState.createEmpty()\r\n}\r\ntype State = Readonly<typeof initState>\r\n\r\ninterface Iprops {\r\n  detail: string\r\n}\r\n\r\nexport default class RichTextEditor extends Component<Iprops, State> {\r\n  state: State = initState\r\n\r\n  constructor(props: Iprops) {\r\n    super(props)\r\n    const html = this.props.detail\r\n    if (html) {\r\n      // 如果有值, 根据html格式字符串创建一个对应的编辑对象\r\n      const contentBlock = htmlToDraft(html)\r\n      const contentState = ContentState.createFromBlockArray(\r\n        contentBlock.contentBlocks\r\n      )\r\n      const editorState = EditorState.createWithContent(contentState)\r\n      this.state = {\r\n        editorState\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n  输入过程中实时的回调\r\n   */\r\n  private onEditorStateChange = (editorState: EditorState) => {\r\n    this.setState({\r\n      editorState\r\n    })\r\n  }\r\n\r\n  public getDetail = () => {\r\n    // 返回输入数据对应的html格式的文本\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n  }\r\n\r\n  private uploadImageCallBack = (file: File) => {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest()\r\n      xhr.open('POST', '/api/manage/img/upload')\r\n      const data = new FormData()\r\n      data.append('image', file)\r\n      xhr.send(data)\r\n      xhr.addEventListener('load', () => {\r\n        if (xhr.status === 200) {\r\n          const response = JSON.parse(xhr.responseText)\r\n          const url = response.data.url // 得到图片的url\r\n          resolve({ data: { link: url } })\r\n        } else {\r\n          message.error('上传文件错误')\r\n          reject(xhr)\r\n        }\r\n      })\r\n      xhr.addEventListener('error', () => {\r\n        const error = JSON.parse(xhr.responseText)\r\n        reject(error)\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { editorState } = this.state\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        editorStyle={{\r\n          border: '1px solid black',\r\n          minHeight: 200,\r\n          paddingLeft: 10\r\n        }}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        toolbar={{\r\n          image: {\r\n            uploadCallback: this.uploadImageCallBack,\r\n            alt: { present: true, mandatory: true }\r\n          }\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { Card, Button, Icon, Form, Input, Cascader, message } from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nimport PicturesWall from '@/components/PicturesWall'\r\nimport RichTextEditor from '@/components/RichTextEditor'\r\nimport { reqGetCategoryList } from '@/api/category'\r\nimport {\r\n  reqAddProduct,\r\n  reqUpdateProduct,\r\n  AddProductForm,\r\n  UpdateProductForm\r\n} from '@/api/product'\r\nimport { validatePrice } from '@/utils/validate'\r\nimport { ICategoryTableItem } from '@/interface/Category'\r\nimport { IProductListItem } from '@/interface/Product'\r\nimport { CascaderOptionType } from 'antd/lib/cascader'\r\nconst TextArea = Input.TextArea\r\n/**\r\n * 商品的添加和编辑组件\r\n */\r\n\r\nconst initState = {\r\n  cascaderOptions: [] as CascaderOptionType[]\r\n}\r\ntype State = Readonly<typeof initState>\r\ninterface IProps extends FormComponentProps, RouteComponentProps {}\r\n\r\nclass ProductEdit extends Component<IProps, State> {\r\n  state: State = initState\r\n  private isEdit: boolean = false\r\n  private picturesWall: React.RefObject<PicturesWall>\r\n  private richTextEditor: React.RefObject<RichTextEditor>\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    if (this.props.location.state) {\r\n      this.isEdit = true\r\n    } else {\r\n      if (this.props.location.pathname.includes('edit')) {\r\n        this.props.history.replace('/product/add')\r\n      }\r\n    }\r\n    this.picturesWall = React.createRef()\r\n    this.richTextEditor = React.createRef()\r\n  }\r\n  componentDidMount() {\r\n    this.getCategoryList('0')\r\n  }\r\n  private handleLoadSubCategoryList = async (\r\n    selectedOptions?: CascaderOptionType[]\r\n  ) => {\r\n    const targetOption = selectedOptions![0]\r\n    targetOption.loading = true\r\n    const subCategoryList = await this.getCategoryList(targetOption.value!)\r\n    targetOption.loading = false\r\n    if (subCategoryList && subCategoryList.length > 0) {\r\n      const subCascaderOptions = subCategoryList.map<CascaderOptionType>(\r\n        item => ({\r\n          value: item._id,\r\n          label: item.name,\r\n          isLeaf: true\r\n        })\r\n      )\r\n      targetOption.children = subCascaderOptions\r\n    } else {\r\n      // 没有二级分类\r\n      targetOption.isLeaf = true\r\n    }\r\n    this.setState({\r\n      cascaderOptions: [...this.state.cascaderOptions]\r\n    })\r\n  }\r\n  private getCategoryList = async (parentId: string) => {\r\n    const res = await reqGetCategoryList(parentId)\r\n\r\n    if (res) {\r\n      const categroyList: ICategoryTableItem[] = res.data.data\r\n      if (parentId === '0') {\r\n        const cascaderOptions = categroyList.map<CascaderOptionType>(item => ({\r\n          value: item._id,\r\n          label: item.name,\r\n          isLeaf: false\r\n        }))\r\n\r\n        if (this.isEdit) {\r\n          const { pCategoryId } = this.props.location.state\r\n            .product as IProductListItem\r\n          if (pCategoryId !== '0') {\r\n            const subCategoryList = await this.getCategoryList(pCategoryId)\r\n            const subCascaderOptions = subCategoryList!.map<CascaderOptionType>(\r\n              item => ({\r\n                value: item._id,\r\n                label: item.name,\r\n                isLeaf: true\r\n              })\r\n            )\r\n            const targetOption = cascaderOptions.find(\r\n              option => option.value === pCategoryId\r\n            )\r\n            if (targetOption) {\r\n              targetOption.children = subCascaderOptions\r\n            }\r\n          }\r\n        }\r\n        this.setState({\r\n          cascaderOptions\r\n        })\r\n      } else {\r\n        return categroyList\r\n      }\r\n    }\r\n  }\r\n  private handleSubmit = () => {\r\n    this.props.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n        const { name, desc, price, categoryIds } = values\r\n        let pCategoryId, categoryId\r\n        if (categoryIds.length === 1) {\r\n          pCategoryId = '0'\r\n          categoryId = categoryIds[0]\r\n        } else {\r\n          pCategoryId = categoryIds[0]\r\n          categoryId = categoryIds[1]\r\n        }\r\n        const imgs = this.picturesWall.current!.getImgs()\r\n        const detail = this.richTextEditor.current!.getDetail()\r\n        let res\r\n        if (this.isEdit) {\r\n          const _id = this.props.location.state.product._id\r\n          const form: UpdateProductForm = {\r\n            _id,\r\n            name,\r\n            desc,\r\n            price,\r\n            pCategoryId,\r\n            categoryId,\r\n            imgs,\r\n            detail\r\n          }\r\n          res = await reqUpdateProduct(form)\r\n        } else {\r\n          const form: AddProductForm = {\r\n            name,\r\n            desc,\r\n            price,\r\n            pCategoryId,\r\n            categoryId,\r\n            imgs,\r\n            detail\r\n          }\r\n          res = await reqAddProduct(form)\r\n        }\r\n        if (res) {\r\n          this.props.history.goBack()\r\n          message.success(`${this.isEdit ? '更新' : '添加'}商品成功`)\r\n        }\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    const title = (\r\n      <div>\r\n        <Button type='link' onClick={() => this.props.history.goBack()}>\r\n          <Icon type='arrow-left' style={{ fontSize: 20 }} />\r\n        </Button>\r\n        <span>{this.isEdit ? '更新' : '添加'}商品</span>\r\n      </div>\r\n    )\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },\r\n      wrapperCol: { span: 8 }\r\n    }\r\n    const { getFieldDecorator } = this.props.form\r\n    let product: IProductListItem\r\n    const categoryIds: string[] = []\r\n    if (this.isEdit) {\r\n      product = this.props.location.state.product\r\n      const { categoryId, pCategoryId } = product\r\n      if (product.pCategoryId === '0') {\r\n        categoryIds.push(categoryId)\r\n      } else {\r\n        categoryIds.push(pCategoryId)\r\n        categoryIds.push(categoryId)\r\n      }\r\n    } else {\r\n      product = {\r\n        name: '',\r\n        desc: '',\r\n        price: '',\r\n        detail: '',\r\n        imgs: [] as string[]\r\n      } as IProductListItem\r\n    }\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Form {...formItemLayout}>\r\n          <Form.Item label='商品名称'>\r\n            {getFieldDecorator('name', {\r\n              initialValue: product.name,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  whitespace: true,\r\n                  message: '请输入商品名称'\r\n                }\r\n              ]\r\n            })(<Input placeholder='请输入商品名称' />)}\r\n          </Form.Item>\r\n          <Form.Item label='商品描述'>\r\n            {getFieldDecorator('desc', {\r\n              initialValue: product.desc,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  whitespace: true,\r\n                  message: '请输入商品描述'\r\n                }\r\n              ]\r\n            })(\r\n              <TextArea\r\n                placeholder='请输入商品描述'\r\n                autoSize={{ minRows: 2, maxRows: 6 }}\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label='商品价格'>\r\n            {getFieldDecorator('price', {\r\n              initialValue: product.price,\r\n              validateFirst: true,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请输入商品价格'\r\n                },\r\n                {\r\n                  validator: validatePrice\r\n                }\r\n              ]\r\n            })(\r\n              <Input\r\n                placeholder='请输入商品价格'\r\n                type='number'\r\n                addonAfter='元'\r\n                min='0'\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label='商品分类'>\r\n            {getFieldDecorator('categoryIds', {\r\n              initialValue: categoryIds,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请选择商品分类'\r\n                }\r\n              ]\r\n            })(\r\n              <Cascader\r\n                options={this.state.cascaderOptions}\r\n                loadData={this.handleLoadSubCategoryList}\r\n                placeholder='请选择商品分类'\r\n              />\r\n            )}\r\n          </Form.Item>\r\n          <Form.Item label='商品图片'>\r\n            <PicturesWall ref={this.picturesWall} imgs={product.imgs} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label='商品详情'\r\n            labelCol={{ span: 2 }}\r\n            wrapperCol={{ span: 20 }}\r\n          >\r\n            <RichTextEditor ref={this.richTextEditor} detail={product.detail} />\r\n          </Form.Item>\r\n          <Form.Item wrapperCol={{ offset: 2, span: 8 }}>\r\n            <Button\r\n              type='primary'\r\n              block\r\n              size='large'\r\n              onClick={this.handleSubmit}\r\n            >\r\n              提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nconst wrapProuctEdit = Form.create<IProps>()(ProductEdit)\r\n\r\nexport default wrapProuctEdit\r\n","import React, { Component } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { Button, Card, Icon, List } from 'antd'\r\nimport { reqGetCategory } from '@/api/category'\r\nimport { IProductListItem } from '@/interface/Product.ts'\r\nimport { BASE_IMG_URL } from '@/config/common'\r\n/**\r\n * Product的详情页\r\n */\r\nconst initState = {\r\n  categoryName: '',\r\n  subCategoryName: ''\r\n}\r\ntype State = Readonly<typeof initState>\r\nclass ProductDetail extends Component<RouteComponentProps, State> {\r\n  state: State = initState\r\n  constructor(props: RouteComponentProps) {\r\n    super(props)\r\n    if (!this.props.location.state) {\r\n      this.props.history.goBack()\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getCategoryName()\r\n  }\r\n  private getCategoryName = async () => {\r\n    const { pCategoryId, categoryId } = this.props.location.state.product\r\n    if (pCategoryId === '0') {\r\n      const res = await reqGetCategory(pCategoryId)\r\n      if (res) {\r\n        this.setState({\r\n          categoryName: res.data.data.name\r\n        })\r\n      }\r\n    } else {\r\n      const [res1, res2] = await Promise.all([\r\n        reqGetCategory(pCategoryId),\r\n        reqGetCategory(categoryId)\r\n      ])\r\n      this.setState({\r\n        categoryName: res1.data.data.name,\r\n        subCategoryName: res2.data.data.name\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const title = (\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <Button\r\n          type='link'\r\n          style={{ fontSize: 20 }}\r\n          onClick={() => {\r\n            this.props.history.goBack()\r\n          }}\r\n        >\r\n          <Icon type='arrow-left' />\r\n        </Button>\r\n        <span>商品详情</span>\r\n      </div>\r\n    )\r\n    const { name, desc, price, detail, imgs } = this.props.location.state\r\n      .product as IProductListItem\r\n    const { categoryName, subCategoryName } = this.state\r\n    return (\r\n      <Card title={title} className='product-detail'>\r\n        <List>\r\n          <List.Item>\r\n            <span className='left'>商品名称：</span>\r\n            <div>\r\n              <span>{name}</span>\r\n            </div>\r\n          </List.Item>\r\n          <List.Item>\r\n            <span className='left'>商品描述：</span>\r\n            <div>\r\n              <span>{desc}</span>\r\n            </div>\r\n          </List.Item>\r\n          <List.Item>\r\n            <span className='left'>商品价格：</span>\r\n            <div>\r\n              <span>{price}元</span>\r\n            </div>\r\n          </List.Item>\r\n          <List.Item>\r\n            <span className='left'>所属分类：</span>\r\n            <div>\r\n              <span>\r\n                {categoryName} {subCategoryName ? '--> ' + subCategoryName : ''}\r\n              </span>\r\n            </div>\r\n          </List.Item>\r\n          <List.Item>\r\n            <span className='left'>商品图片：</span>\r\n            <div>\r\n              {imgs.map(img => (\r\n                <img\r\n                  className='product-img'\r\n                  key={img}\r\n                  src={BASE_IMG_URL + img}\r\n                  alt='商品图片'\r\n                />\r\n              ))}\r\n            </div>\r\n          </List.Item>\r\n          <List.Item>\r\n            <span className='left'>商品详情：</span>\r\n            <div\r\n              dangerouslySetInnerHTML={{\r\n                __html: detail\r\n              }}\r\n            ></div>\r\n          </List.Item>\r\n        </List>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProductDetail\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport ProductList from './ProductList'\r\nimport ProductEdit from './ProductEdit'\r\nimport ProductDetail from './ProductDetail'\r\nimport './index.less'\r\n/**\r\n * 商品路由\r\n */\r\nclass Product extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path='/product' exact component={ProductList} />\r\n        <Route path='/product/add' component={ProductEdit} />\r\n        <Route path='/product/edit' component={ProductEdit} />\r\n        <Route path='/product/detail' component={ProductDetail} />\r\n        <Redirect to='/product' />\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Product\r\n","import React, { forwardRef, useImperativeHandle } from 'react'\r\nimport { Form, Input, Select } from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nimport { validatePwd } from '@/utils/validate'\r\nimport { IRoleListItem } from '@/interface/Role'\r\nimport { IUserListItem } from '@/interface/User'\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\ninterface IProps extends FormComponentProps {\r\n  roleList: IRoleListItem[]\r\n  user: IUserListItem\r\n}\r\nconst UserForm = forwardRef<FormComponentProps, IProps>(\r\n  ({ form, roleList, user }: IProps, ref) => {\r\n    useImperativeHandle(ref, () => ({\r\n      form\r\n    }))\r\n    const { getFieldDecorator } = form\r\n    const formItemLayout = {\r\n      labelCol: { span: 5 },\r\n      wrapperCol: { span: 19 }\r\n    }\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Item label='用户名'>\r\n          {getFieldDecorator('username', {\r\n            initialValue: user.username,\r\n            rules: [\r\n              { required: true, whitespace: true, message: '请输入用户名' },\r\n              { min: 4, message: '用户名至少为4位' },\r\n              { max: 12, message: '用户名最多为12位' },\r\n              {\r\n                pattern: /^[A-Za-z0-9_]+$/,\r\n                message: '用户名必须是英文、数字或下划线组成'\r\n              }\r\n            ]\r\n          })(<Input placeholder='请输入用户名' />)}\r\n        </Item>\r\n        {user._id ? null : (\r\n          <Item label='密码'>\r\n            {getFieldDecorator('password', {\r\n              //自定义校验\r\n              validateFirst: true,\r\n              initialValue: '',\r\n              rules: [\r\n                { required: true, whitespace: true, message: '请输入密码' },\r\n                { validator: validatePwd }\r\n              ]\r\n            })(\r\n              <Input\r\n                type='password'\r\n                placeholder='密码'\r\n                autoComplete='current-password'\r\n              />\r\n            )}\r\n          </Item>\r\n        )}\r\n        <Item label='手机号'>\r\n          {getFieldDecorator('phone', {\r\n            initialValue: user.phone,\r\n            validateFirst: true,\r\n            rules: [\r\n              { required: true, whitespace: true, message: '请输入手机号' },\r\n              {\r\n                pattern: /^(?:(?:\\+|00)86)?1(?:(?:3[\\d])|(?:4[5-7|9])|(?:5[0-3|5-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\\d])|(?:9[1|8|9]))\\d{8}$/,\r\n                message: '手机号格式不正确'\r\n              }\r\n            ]\r\n          })(<Input placeholder='手机号' />)}\r\n        </Item>\r\n        <Item label='邮箱'>\r\n          {getFieldDecorator('email', {\r\n            validateFirst: true,\r\n            initialValue: user.email,\r\n            rules: [\r\n              { required: true, whitespace: true, message: '请输入邮箱' },\r\n              {\r\n                pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\r\n                message: '邮箱格式不正确'\r\n              }\r\n            ]\r\n          })(<Input placeholder='请输入邮箱' />)}\r\n        </Item>\r\n        <Item label='角色'>\r\n          {getFieldDecorator('role_id', {\r\n            initialValue: user.role_id,\r\n            rules: [{ required: true, whitespace: true, message: '请选择角色' }]\r\n          })(\r\n            <Select placeholder='请选择角色'>\r\n              {roleList.map(role => (\r\n                <Option key={role._id} value={role._id}>\r\n                  {role.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n)\r\n\r\nconst WrapUserForm = Form.create<IProps>()(UserForm)\r\n\r\nexport default WrapUserForm\r\n","import request from '@/utils/request'\r\nimport Response from '@/interface/Response'\r\nimport { IUserListItem } from '@/interface/User'\r\n\r\nexport function reqGetUserList(): Response {\r\n  return request({\r\n    url: '/manage/user/list',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\nexport function reqAddUser(form: IUserListItem): Response {\r\n  return request({\r\n    url: '/manage/user/add',\r\n    method: 'post',\r\n    data: form\r\n  })\r\n}\r\n\r\nexport function reqUpdateUser(\r\n  form: Pick<IUserListItem, Exclude<keyof IUserListItem, 'password'>>\r\n): Response {\r\n  return request({\r\n    url: '/manage/user/update',\r\n    method: 'post',\r\n    data: form\r\n  })\r\n}\r\n\r\nexport function reqDeleteUser(userId: string): Response {\r\n  return request({\r\n    url: '/manage/user/delete',\r\n    method: 'post',\r\n    data: {\r\n      userId\r\n    }\r\n  })\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Table, Modal, Button, message } from 'antd'\r\nimport UserForm from './UserForm'\r\nimport { formatDate } from '@/utils/time'\r\nimport { ColumnProps } from 'antd/es/table'\r\nimport { IUserListItem } from '@/interface/User'\r\nimport {\r\n  reqGetUserList,\r\n  reqDeleteUser,\r\n  reqAddUser,\r\n  reqUpdateUser\r\n} from '@/api/user'\r\nimport { PAGE_SIZE } from '@/config/common'\r\nimport { IRoleListItem } from '@/interface/Role'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\n\r\nconst initState = {\r\n  userList: [] as IUserListItem[],\r\n  roleList: [] as IRoleListItem[],\r\n  user: {} as IUserListItem, // 点击的user\r\n  isModalShow: false,\r\n  loading: false,\r\n  confirmLoading: false\r\n}\r\ntype State = Readonly<typeof initState>\r\n\r\nclass User extends Component<object, State> {\r\n  state: State = initState\r\n  private userForm: React.RefObject<FormComponentProps>\r\n  private columns: ColumnProps<IUserListItem>[] = [\r\n    {\r\n      title: '用户名',\r\n      dataIndex: 'username',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '电话',\r\n      dataIndex: 'phone',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '注册时间',\r\n      dataIndex: 'create_time',\r\n      render: formatDate,\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '所属角色',\r\n      dataIndex: 'role_id',\r\n      render: (roleId: string) => this.roleNames[roleId],\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '操作',\r\n      align: 'center',\r\n      render: (user: IUserListItem) => (\r\n        <div>\r\n          <Button type='link' onClick={() => this.handleShowUpdate(user)}>\r\n            修改\r\n          </Button>\r\n          <Button\r\n            type='link'\r\n            onClick={() => {\r\n              this.handleDeleteUser(user)\r\n            }}\r\n          >\r\n            删除\r\n          </Button>\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n  // roleName映射\r\n  private roleNames: { [key: string]: string } = {}\r\n  constructor(props: object) {\r\n    super(props)\r\n    this.userForm = React.createRef()\r\n  }\r\n  componentDidMount() {\r\n    this.getUserList()\r\n  }\r\n  private handleShowAdd = () => {\r\n    this.setState({\r\n      user: {} as IUserListItem,\r\n      isModalShow: true\r\n    })\r\n  }\r\n  private handleShowUpdate = (user: IUserListItem) => {\r\n    this.setState({\r\n      user,\r\n      isModalShow: true\r\n    })\r\n  }\r\n  private handleDeleteUser = async (user: IUserListItem) => {\r\n    Modal.confirm({\r\n      title: `确认删除${user.username}？`,\r\n      okText: '确定',\r\n      cancelText: '取消',\r\n      onOk: async () => {\r\n        const res = await reqDeleteUser(user._id)\r\n        if (res) {\r\n          message.success('删除用户成功！')\r\n          this.getUserList()\r\n        }\r\n      }\r\n    })\r\n  }\r\n  private getUserList = async () => {\r\n    const res = await reqGetUserList()\r\n    if (res) {\r\n      this.roleNames = (res.data.data.roles as IRoleListItem[]).reduce<{\r\n        [key: string]: string\r\n      }>((pre, role) => {\r\n        pre[role._id] = role.name\r\n        return pre\r\n      }, {})\r\n      this.setState({\r\n        roleList: res.data.data.roles,\r\n        userList: res.data.data.users\r\n      })\r\n    }\r\n  }\r\n  private hanleModalCancel = () => {\r\n    this.userForm.current!.form.resetFields()\r\n    this.setState({\r\n      isModalShow: false\r\n    })\r\n  }\r\n  private handleSubmitForm = () => {\r\n    const form = this.userForm.current!.form\r\n    form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n        this.setState({\r\n          confirmLoading: true\r\n        })\r\n        let res\r\n        const isUpdate = this.state.user._id ? true : false\r\n        if (isUpdate) {\r\n          res = await reqUpdateUser({ _id: this.state.user._id, ...values })\r\n        } else {\r\n          res = await reqAddUser(values)\r\n        }\r\n\r\n        if (res) {\r\n          message.success(`${isUpdate ? '修改' : '添加'}用户成功`)\r\n          this.setState({\r\n            confirmLoading: false,\r\n            isModalShow: false\r\n          })\r\n          form.resetFields()\r\n          this.getUserList()\r\n        } else {\r\n          this.setState({\r\n            confirmLoading: false\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    const title = (\r\n      <Button type='primary' onClick={this.handleShowAdd}>\r\n        添加用户\r\n      </Button>\r\n    )\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          columns={this.columns}\r\n          loading={this.state.loading}\r\n          dataSource={this.state.userList}\r\n          pagination={{ defaultPageSize: PAGE_SIZE }}\r\n        />\r\n        <Modal\r\n          title={this.state.user._id ? '更新分类' : '添加分类'}\r\n          visible={this.state.isModalShow}\r\n          onCancel={this.hanleModalCancel}\r\n          onOk={this.handleSubmitForm}\r\n          maskClosable={false}\r\n          confirmLoading={this.state.confirmLoading}\r\n          okText='确定'\r\n          cancelText='取消'\r\n        >\r\n          <UserForm\r\n            roleList={this.state.roleList}\r\n            user={this.state.user}\r\n            wrappedComponentRef={this.userForm}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User\r\n","import React, { forwardRef, useImperativeHandle } from 'react'\r\nimport { Form, Input } from 'antd'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nconst Item = Form.Item\r\n\r\ninterface IProps extends FormComponentProps {}\r\nconst AddForm = forwardRef<FormComponentProps, IProps>(\r\n  ({ form }: IProps, ref) => {\r\n    useImperativeHandle(ref, () => ({\r\n      form\r\n    }))\r\n    const { getFieldDecorator } = form\r\n    const formItemLayout = {\r\n      labelCol: { span: 5 },\r\n      wrapperCol: { span: 19 }\r\n    }\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Item label='角色名称'>\r\n          {getFieldDecorator('roleName', {\r\n            initialValue: '',\r\n            rules: [\r\n              { required: true, whitespace: true, message: '请输入角色名' }\r\n            ]\r\n          })(<Input placeholder='请输入角色名' />)}\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n)\r\n\r\n// 经过包装后的Login组件\r\nconst WrapAddForm = Form.create<IProps>()(AddForm)\r\n\r\nexport default WrapAddForm\r\n","import React, { Component } from 'react'\r\nimport { Form, Input, Tree } from 'antd'\r\nimport { IRoleListItem } from '@/interface/Role'\r\nimport menuList, { IMenuList } from '@/config/menuList'\r\nconst Item = Form.Item\r\nconst TreeNode = Tree.TreeNode\r\n\r\ninterface IProps {\r\n  role: IRoleListItem\r\n}\r\n// 需要保存props做会缓存\r\ninterface IState {\r\n  checkedKeys: string[]\r\n  props: IProps\r\n}\r\ntype State = Readonly<IState>\r\n\r\nclass AuthForm extends Component<IProps, State> {\r\n  private renderTreeNodes = (data: IMenuList) =>\r\n    data.map(item => {\r\n      if (item.children) {\r\n        return (\r\n          <TreeNode title={item.title} key={item.key}>\r\n            {this.renderTreeNodes(item.children)}\r\n          </TreeNode>\r\n        )\r\n      }\r\n      return <TreeNode key={item.key} {...item} />\r\n    })\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    const menus = this.props.role.menus\r\n    this.state = {\r\n      checkedKeys: menus,\r\n      props\r\n    }\r\n  }\r\n  // state和props变化都会触发，需要hack\r\n  static getDerivedStateFromProps(\r\n    nextProps: IProps,\r\n    preState: State\r\n  ): State | null {\r\n    // 需要保存props做会缓存\r\n    const role = nextProps.role\r\n    if (role.menus !== preState.props.role.menus) {\r\n      return {\r\n        checkedKeys: role.menus,\r\n        props: {\r\n          role\r\n        }\r\n      }\r\n    }\r\n    return null\r\n  }\r\n  public getMenus = () => {\r\n    return this.state.checkedKeys\r\n  }\r\n  private handleCheck = (\r\n    checkedKeys:\r\n      | string[]\r\n      | {\r\n          checked: string[]\r\n          halfChecked: string[]\r\n        }\r\n  ) => {\r\n    if (Array.isArray(checkedKeys)) {\r\n      this.setState({\r\n        checkedKeys\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: { span: 5 },\r\n      wrapperCol: { span: 19 }\r\n    }\r\n    const { role } = this.props\r\n    return (\r\n      <React.Fragment>\r\n        <Form {...formItemLayout}>\r\n          <Item label='角色名称'>\r\n            <Input value={role.name} disabled />\r\n          </Item>\r\n        </Form>\r\n        <Tree\r\n          checkable\r\n          defaultExpandAll\r\n          checkedKeys={this.state.checkedKeys}\r\n          onCheck={this.handleCheck}\r\n        >\r\n          {this.renderTreeNodes(menuList)}\r\n        </Tree>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AuthForm\r\n","import request from '@/utils/request'\r\nimport Response from '@/interface/Response'\r\nimport { IRoleListItem } from '@/interface/Role'\r\n\r\nexport function reqGetRoleList(): Response {\r\n  return request({\r\n    url: '/manage/role/list',\r\n    method: 'get'\r\n  })\r\n}\r\n\r\nexport function reqAddRole(roleName: string): Response {\r\n  return request({\r\n    url: '/manage/role/add',\r\n    method: 'post',\r\n    data: {\r\n      roleName\r\n    }\r\n  })\r\n}\r\n\r\nexport function reqUpdateRole(role: IRoleListItem): Response {\r\n  return request({\r\n    url: '/manage/role/update',\r\n    method: 'post',\r\n    data: role\r\n  })\r\n}\r\n","import React, { Component } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Card, Button, Table, Modal, message } from 'antd'\r\nimport AddForm from './AddForm'\r\nimport AuthForm from './AuthForm'\r\nimport { ColumnProps } from 'antd/es/table'\r\nimport { IRoleListItem } from '@/interface/Role'\r\nimport { PAGE_SIZE } from '@/config/common'\r\nimport { TableEventListeners } from 'antd/lib/table'\r\nimport { reqGetRoleList, reqAddRole, reqUpdateRole } from '@/api/role'\r\nimport { FormComponentProps } from 'antd/lib/form'\r\nimport { LoginUser } from '@/utils/auth'\r\nimport { formatDate } from '@/utils/time'\r\nimport { logout } from '@/redux/action'\r\nimport { RootState } from '@/redux/reducers'\r\n/**\r\n * 权限路由\r\n */\r\nconst initState = {\r\n  roleList: [] as IRoleListItem[],\r\n  seletedRole: {} as IRoleListItem,\r\n  isAddFormShow: false,\r\n  isAuthFormShow: false,\r\n  confirmLoading: false,\r\n  loading: false\r\n}\r\ntype State = Readonly<typeof initState>\r\n\r\ninterface IProps extends RouteComponentProps {\r\n  user: LoginUser\r\n  logout: typeof logout\r\n}\r\n\r\nclass Role extends Component<IProps, State> {\r\n  state: State = initState\r\n  private addForm: React.RefObject<FormComponentProps>\r\n  private authForm: React.RefObject<AuthForm>\r\n  private columns: ColumnProps<IRoleListItem>[] = [\r\n    {\r\n      title: '角色名称',\r\n      dataIndex: 'name',\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex: 'create_time',\r\n      render: formatDate,\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '授权时间',\r\n      dataIndex: 'auth_time',\r\n      render: formatDate,\r\n      align: 'center'\r\n    },\r\n    {\r\n      title: '授权人',\r\n      dataIndex: 'auth_name',\r\n      align: 'center'\r\n    }\r\n  ]\r\n  private tableOnRow = (seletedRole: IRoleListItem): TableEventListeners => {\r\n    return {\r\n      onClick: () => {\r\n        this.setState({\r\n          seletedRole\r\n        })\r\n      }\r\n    }\r\n  }\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    this.addForm = React.createRef()\r\n    this.authForm = React.createRef()\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRoleList()\r\n  }\r\n\r\n  private getRoleList = async () => {\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    const res = await reqGetRoleList()\r\n    if (res) {\r\n      this.setState({\r\n        loading: false,\r\n        roleList: res.data.data\r\n      })\r\n    }\r\n  }\r\n  private handleCancelModal = () => {\r\n    if (this.state.isAddFormShow) {\r\n      this.addForm.current!.form.resetFields()\r\n      this.setState({\r\n        isAddFormShow: false\r\n      })\r\n    } else if (this.state.isAuthFormShow) {\r\n      this.setState({\r\n        isAuthFormShow: false\r\n      })\r\n    }\r\n  }\r\n  private handleSubmitAdd = () => {\r\n    const form = this.addForm.current!.form\r\n    form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n        const roleName = values.roleName\r\n        this.setState({\r\n          confirmLoading: true\r\n        })\r\n        const res = await reqAddRole(roleName)\r\n        if (res) {\r\n          message.success('添加角色成功')\r\n          //不重新请求，而是将返回值添加回来\r\n          // this.getRoleList()\r\n          const role = res.data.data\r\n          form.resetFields()\r\n          this.setState(({ roleList }) => ({\r\n            isAddFormShow: false,\r\n            confirmLoading: false,\r\n            roleList: [...roleList, role]\r\n          }))\r\n        } else {\r\n          this.setState({\r\n            confirmLoading: false\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }\r\n  private handleSubmitUpdate = async () => {\r\n    const menus = this.authForm.current!.getMenus()\r\n    // 改变引用变量的值\r\n    const newRole = this.state.seletedRole\r\n    newRole.menus = menus\r\n    newRole.auth_name = this.props.user.username\r\n    this.setState({\r\n      confirmLoading: true\r\n    })\r\n    const res = await reqUpdateRole(newRole)\r\n    if (res) {\r\n      // 更新自己的权限强制退出\r\n      if (newRole._id === this.props.user.role_id) {\r\n        this.props.logout()\r\n        message.info('角色权限更新，请重新登录')\r\n      } else {\r\n        message.success('设置权限成功')\r\n        this.setState(({ roleList }) => ({\r\n          confirmLoading: false,\r\n          roleList: [...roleList],\r\n          isAuthFormShow: false\r\n        }))\r\n      }\r\n    } else {\r\n      this.setState({\r\n        confirmLoading: false\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const title = (\r\n      <div>\r\n        <Button\r\n          type='primary'\r\n          style={{ marginRight: 15 }}\r\n          onClick={() => this.setState({ isAddFormShow: true })}\r\n        >\r\n          创建角色\r\n        </Button>\r\n        <Button\r\n          type='primary'\r\n          disabled={!this.state.seletedRole._id}\r\n          onClick={() => this.setState({ isAuthFormShow: true })}\r\n        >\r\n          设置角色权限\r\n        </Button>\r\n      </div>\r\n    )\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          dataSource={this.state.roleList}\r\n          loading={this.state.loading}\r\n          rowKey='_id'\r\n          columns={this.columns}\r\n          pagination={{ defaultPageSize: PAGE_SIZE }}\r\n          rowSelection={{\r\n            type: 'radio',\r\n            selectedRowKeys: [this.state.seletedRole._id],\r\n            onSelect: (seletedRole: IRoleListItem) => {\r\n              this.setState({\r\n                seletedRole\r\n              })\r\n            }\r\n          }}\r\n          onRow={this.tableOnRow}\r\n        />\r\n        <Modal\r\n          title='添加角色'\r\n          visible={this.state.isAddFormShow}\r\n          onCancel={this.handleCancelModal}\r\n          onOk={this.handleSubmitAdd}\r\n          confirmLoading={this.state.confirmLoading}\r\n          okText='确定'\r\n          cancelText='取消'\r\n          maskClosable={false}\r\n        >\r\n          <AddForm wrappedComponentRef={this.addForm} />\r\n        </Modal>\r\n        <Modal\r\n          title='设置角色权限'\r\n          visible={this.state.isAuthFormShow}\r\n          onCancel={this.handleCancelModal}\r\n          onOk={this.handleSubmitUpdate}\r\n          confirmLoading={this.state.confirmLoading}\r\n          okText='确定'\r\n          cancelText='取消'\r\n          maskClosable={false}\r\n        >\r\n          <AuthForm role={this.state.seletedRole} ref={this.authForm} />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => {\r\n  return {\r\n    user: state.user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  logout\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Role)\r\n","import React, { Component } from 'react'\r\nimport { Card, Button } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nconst initState = {\r\n  sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n  stores: [6, 10, 25, 20, 15, 10] // 库存的数组\r\n}\r\ntype State = Readonly<typeof initState>\r\n\r\nclass Bar extends Component<object, State> {\r\n  state: State = initState\r\n  private handleupdate = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce<number[]>((pre, store) => {\r\n        pre.push(store - 1)\r\n        return pre\r\n      }, [])\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  private getOption = (sales: number[], stores: number[]) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: '销量',\r\n          type: 'bar',\r\n          data: sales\r\n        },\r\n        {\r\n          name: '库存',\r\n          type: 'bar',\r\n          data: stores\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { sales, stores } = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.handleupdate}>\r\n            更新\r\n          </Button>\r\n        </Card>\r\n\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Bar\r\n","import React, { Component } from 'react'\r\nimport { Card, Button } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nconst initState = {\r\n  sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n  stores: [6, 10, 25, 20, 15, 10] // 库存的数组\r\n}\r\ntype State = Readonly<typeof initState>\r\n\r\nclass Line extends Component<object, State> {\r\n  state: State = initState\r\n  private handleupdate = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce<number[]>((pre, store) => {\r\n        pre.push(store - 1)\r\n        return pre\r\n      }, [])\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  private getOption = (sales: number[], stores: number[]) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: '销量',\r\n          type: 'line',\r\n          data: sales\r\n        },\r\n        {\r\n          name: '库存',\r\n          type: 'line',\r\n          data: stores\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { sales, stores } = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.handleupdate}>\r\n            更新\r\n          </Button>\r\n        </Card>\r\n\r\n        <Card title='折线图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Line\r\n","import React, { Component } from 'react'\r\nimport { Card } from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的饼图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n  private getOption = () => {\r\n    return {\r\n      title: {\r\n        text: '某站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x: 'center'\r\n      },\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\r\n      },\r\n      series: [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius: '55%',\r\n          center: ['50%', '60%'],\r\n          data: [\r\n            { value: 335, name: '直接访问' },\r\n            { value: 310, name: '邮件营销' },\r\n            { value: 234, name: '联盟广告' },\r\n            { value: 135, name: '视频广告' },\r\n            { value: 1548, name: '搜索引擎' }\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  private getOption2 = () => {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc'\r\n        }\r\n      },\r\n\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b} : {c} ({d}%)'\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series: [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius: '55%',\r\n          center: ['50%', '50%'],\r\n          data: [\r\n            { value: 335, name: '直接访问' },\r\n            { value: 310, name: '邮件营销' },\r\n            { value: 274, name: '联盟广告' },\r\n            { value: 235, name: '视频广告' },\r\n            { value: 400, name: '搜索引擎' }\r\n          ].sort(function(a, b) {\r\n            return a.value - b.value\r\n          }),\r\n          roseType: 'radius',\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              }\r\n            }\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#c23531',\r\n              shadowBlur: 200,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function() {\r\n            return Math.random() * 200\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='饼图一'>\r\n          <ReactEcharts option={this.getOption()} style={{ height: 300 }} />\r\n        </Card>\r\n        <Card title='饼图二'>\r\n          <ReactEcharts option={this.getOption2()} style={{ height: 300 }} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { Button, Row, Col } from 'antd'\r\nimport './index.less'\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component<RouteComponentProps> {\r\n  render() {\r\n    return (\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button\r\n              type='primary'\r\n              onClick={() => this.props.history.replace('/home')}\r\n            >\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Layout } from 'antd'\r\nimport LeftNav from '@/components/LeftNav/index'\r\nimport Header from '@/components/Header'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Home from '@/views/Home'\r\nimport Category from '@/views/Category'\r\nimport Product from '@/views/Product'\r\nimport User from '@/views/User'\r\nimport Role from '@/views/Role'\r\nimport Bar from '@/views/Charts/Bar'\r\nimport Line from '@/views/Charts/Line'\r\nimport Pie from '@/views/Charts/Pie'\r\nimport NotFound from '@/views//NotFound/index'\r\nimport { RootState } from '@/redux/reducers'\r\nimport { LoginUser } from '@/utils/auth'\r\n\r\nconst { Footer, Sider, Content } = Layout\r\n\r\nconst initState = {}\r\ninterface IProps {\r\n  user: LoginUser\r\n}\r\ntype State = Readonly<typeof initState>\r\n\r\nclass Admin extends Component<IProps, State> {\r\n  state: State = initState\r\n  render() {\r\n    const { user } = this.props\r\n    if (!user || !user._id) {\r\n      return <Redirect to='/login' />\r\n    }\r\n    return (\r\n      <Layout style={{ minHeight: '100%' }}>\r\n        <Sider>\r\n          <LeftNav />\r\n        </Sider>\r\n        <Layout>\r\n          <Header />\r\n          <Content style={{ margin: 20, backgroundColor: '#fff' }}>\r\n            <Switch>\r\n              <Redirect exact from='/' to='/home' />\r\n              <Route path='/home' component={Home} />\r\n              <Route path='/category' component={Category} />\r\n              <Route path='/product' component={Product} />\r\n              <Route path='/role' component={Role} />\r\n              <Route path='/user' component={User} />\r\n              <Route path='/charts/bar' component={Bar} />\r\n              <Route path='/charts/line' component={Line} />\r\n              <Route path='/charts/pie' component={Pie} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center', color: '#ccc' }}>\r\n            推荐使用谷歌浏览器，可以获得更加页面操作体验\r\n          </Footer>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state: RootState) => {\r\n  return {\r\n    user: state.user\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Admin)\r\n","import React, { Component } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Login from './views/Login'\nimport Admin from './views/Admin'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path='/login' component={Login}></Route>\n          <Route path='/' component={Admin}></Route>\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App\n","// /src/redux/reducers.js\r\nimport { combineReducers, Reducer } from 'redux'\r\nimport { getUser } from '@/utils/auth'\r\nimport { SET_HEAD_TITLE, GET_USER_INFO, REMOVE_USER } from './action-types'\r\nimport { ActionType } from './action'\r\nimport { LoginUser } from '@/utils/auth'\r\n\r\nconst headTitle: Reducer<string, ActionType<string>> = (state = '', action) => {\r\n  switch (action.type) {\r\n    case SET_HEAD_TITLE:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst initUser = getUser()\r\nconst user: Reducer<LoginUser, ActionType<typeof initUser>> = (\r\n  state = initUser,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case GET_USER_INFO:\r\n      return action.data\r\n    case REMOVE_USER:\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\nconst rootReducer = combineReducers({\r\n  headTitle,\r\n  user\r\n})\r\n\r\n// 向外保留一个联合的结构\r\nexport default rootReducer\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from './reducers'\r\n\r\n//向外暴露store\r\nexport default createStore(\r\n  reducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n","/**\n * 入口文件\n */\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from '@/redux/store'\nimport 'normalize.css'\nimport './index.less'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n","module.exports = __webpack_public_path__ + \"static/media/logo.ba1f87ec.png\";"],"sourceRoot":""}